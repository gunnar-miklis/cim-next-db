generator client {
  provider = "prisma-client-js"
  output   = "./generated/client"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model Signature {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String?
  email     String   @unique
  approved  Boolean  @default(false)
}

// relations
model Event {
  id          Int        @id @default(autoincrement())
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  name        String
  description String?
  dateStart   DateTime
  dateEnd     DateTime?
  image       Image? // 1:1 needs to be optionl
  imageId     String?
  venue       Venue      @relation(fields: [venueId], references: [id])
  venueId     Int
  categories  Category[]
}

// one-to-one relation: one event has one image
model Image {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String
  url       String
  event     Event    @relation(fields: [eventId], references: [id])
  eventId   Int      @unique
}

// one-to-many relation: one venue can have many events
model Venue {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String
  events    Event[]
}

// many-to-many relation: many events can have many categories and vice versa
model Category {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String
  events    Event[]
}
